<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
   
   <!-- 引入外部属性文件 -->
   <context:property-placeholder location="classpath:database.properties"/>
   
   <!-- 配置扫描包 -->
   <context:component-scan base-package="com.logo.dao.Impl"></context:component-scan>
   <context:component-scan base-package="com.logo.service.Impl"></context:component-scan>
   
  <!-- 配置数据源 -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
     <!-- 连接数据库的四个基本参数 -->
     <property name="driverClass" value="${jdbc.driver}"></property>
     <property name="jdbcUrl" value="${jdbc.url}"></property>
     <property name="user" value="${jdbc.username}"></property>
     <property name="password" value="${jdbc.password}"></property>
  </bean>
  
  <!-- 配置SessionFactory
    使用spring.orm 中的LocalSessionFactoryBean来管理SessionFactory
   -->
  <bean id="sessionFactoty" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
     <!-- 配置数据源 -->
     <property name="dataSource" ref="dataSource"></property>
     <!-- 配置hibernate核心配置文件 -->
     <property name="configLocations" value="classpath:hibernate.cfg.xml"></property>
     <!-- 配置映射文件 -->
     <property name="mappingLocations" value="classpath:com/logo/entity/hbm/OrderStatus.hbm.xml"></property>
  </bean>
  
  <!-- 配置事务管理器
       在spring-orm :HibernateTransactionManager
     配置事务管理器时：sessionFactory是必须的
   -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
     <!-- 配置SessionFactory -->
     <property name="sessionFactory" ref="sessionFactoty"></property>
  </bean>
  
  <!-- 配置注解的事务 -->
  <tx:annotation-driven transaction-manager="transactionManager"/>
  
  <!-- 配置事务增强处理Bean，指定事务管理器 -->  
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
        <!-- 配置详细事务处理语义 -->  
        <tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
  
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="load*" propagation="SUPPORTS" read-only="true" />  
  
            <!-- 其他采用默认事务方式 -->  
            <tx:method name="*" />  
  
        </tx:attributes>  
    </tx:advice>  
  
    <!-- Spring aop事务管理 -->  
    <aop:config>  
        <!-- 配置切入点 -->  
        <aop:pointcut id="transactionPointcut" expression="execution(* com.logo.service.Impl.*.*(..))" />  
        <!-- 指定在txAdvice切入点应用txAdvice事务增强处理 -->  
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config>
 
</beans>